"""init tables

Revision ID: 39494dd329b6
Revises: 
Create Date: 2024-12-01 14:40:21.507714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
#import pgvector
from sqlalchemy.dialects import postgresql
from sqlalchemy.orm.session import Session
from app.db.models.user import UserRole, User
from app.utils.security import hash_password

# revision identifiers, used by Alembic.
revision: str = '39494dd329b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('active', 'deactive', name='userstate').create(op.get_bind())
    sa.Enum('admin', 'user', name='userrole').create(op.get_bind())
    op.create_table('oauth_providers',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider_type', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('client_secret', sa.String(), nullable=False),
    sa.Column('login_url', sa.String(), nullable=False),
    sa.Column('verify_url', sa.String(), nullable=False),
    sa.Column('access_token_url', sa.String(), nullable=False),
    sa.Column('refresh_token_url', sa.String(), nullable=False),
    sa.Column('callback_url', sa.String(), nullable=False),
    sa.Column('scope', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('roles', sa.ARRAY(postgresql.ENUM('admin', 'user', name='userrole', create_type=False)), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('state', postgresql.ENUM('active', 'deactive', name='userstate', create_type=False), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('api_keys',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('lastest_access', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_api_key'), 'api_keys', ['api_key'], unique=False)
    op.create_table('external_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('oauth_provider_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('userinfo', sa.JSON(), nullable=False),
    sa.Column('token_expired_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['oauth_provider_id'], ['oauth_providers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    session = Session(bind=op.get_bind())
    session.add(User(username='admin', email='admin@admin.com', password=hash_password('admin'), roles=[UserRole.admin]))
    session.add(User(username='user', email='user@example.com', password=hash_password('user'), roles=[UserRole.user]))
    session.commit()

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('external_users')
    op.drop_index(op.f('ix_api_keys_api_key'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('users')
    op.drop_table('oauth_providers')
    sa.Enum('admin', 'user', name='userrole').drop(op.get_bind())
    sa.Enum('active', 'deactive', name='userstate').drop(op.get_bind())
    # ### end Alembic commands ###
